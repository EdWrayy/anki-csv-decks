The TCP / IP Model (vs the Tanenbaum Model and OSI model),"The&nbsp;Transmission Control Protocol / Internet Protocol model is the practical networking model used in real-world internet communications.<br><br>It contains 4 layers:<br><b>Application Layer</b> – Handles high-level protocols like HTTP, FTP, SMTP, and DNS. This is where applications interact with the network.<br><b>Transport Layer</b> – Manages end-to-end communication between devices using protocols like TCP (reliable, connection-oriented) and UDP (faster, connectionless).<br><b>Internet Layer</b> – Responsible for addressing, routing, and delivering packets using IP (Internet Protocol). It includes protocols like ICMP and ARP.<br><b>Network Access Layer&nbsp;&nbsp;</b>(also called Link Layer) – Deals with the physical transmission of data over network hardware, including Ethernet, Wi-Fi, and other data link/physical layer technologies.<br><br>The Tanenbaum model isn't widely recognized as a standard model but is instead Andrew Tanenbaum’s simplified version of the OSI model. <br>It is the modern updated version of the IP model.<br>It is similar to the IP model but it renames the internet layer as the network layer, and splits the link layer into a link and physical layer.<br>This is the model we study in this module.<br><br>The OSI model is also used for academics and teaching. It is the same as the Tanenbaum model but the application layer is split further into the application, presentation and session layer."
Examples of Components Handling Each Layer of the Tanenbaum Model,"Application -&nbsp;Software like Chrome, Outlook, Zoom, which interact with the network via protocols (HTTP, SMTP, RTP).<br><br>Transport - The operating system's TCP/UDP stack (Windows/Linux networking software).<br><br>Internet - The IP stack in the OS kernel (Windows TCP/IP stack, Linux networking stack).<br><br>Link - Network drivers and NICs (Ethernet, Wi-Fi adapters, firmware handling MAC addressing).<br><br>Physical - Network hardware, NICs and the physical medium. (Wi-Fi routers, fiber-optic cables, network interface cards - NICs)."
The Link Layer's Functions,"Handled by Network Interface Cards on devices<br>The Link Layer is responsible for framing, addressing, and transmitting data over physical media within a local network (LAN).<br>It encapsulates network layer packets into frames for transmission.<br>It handles MAC (Media Access Control) addresses, which are used to uniquely identify devices on the local network.<br>It can send data directly to another device on the same network (unicast) or to a router (when sending data to another network).<br>It also manages error detection, flow control, and access to the physical medium."
"Packets, Frames, Datagrams, Segments","<b>Datagram / Segment</b><br>A data unit at the transport layer<br>It is a datagram if using TCP<br>It is a segment if using UDP <i>(remember SMG spray)</i><b><br><br>Packet:</b><br>A unit of data that is transmitted across a network. <br>It consists of a header (containing metadata like source and destination addresses) and a payload (the actual data being sent).<br>Packets exist at multiple layers, but they are most commonly associated with the Network Layer (e.g., IP packets).<br><br><b>Frame:</b><br>A data unit at the Link Layer (Data Link Layer in the OSI model).<br>A frame encapsulates a packet from the Network Layer.<br>It contains three main parts:<br>Header – Contains MAC addresses and other control information.<br>Payload – The encapsulated data (which includes a packet from a higher layer).<br>Trailer – Contains error-checking information (e.g., CRC for detecting corruption).<br><br>"
Flow Control (What layers does it occur on?),"Regulating the speed at which data is sent.<br>Ensures a slow receiver is not overwhelmed by a fast sender.<br>Can be message-based (receiver sends control messages to pause/resume) or rate-based (pre-agreed speed).<br><br>This is most common on the transport layer (TCP).<br>It can occur on the link layer&nbsp;(Ethernet, Wi-Fi) aswell but this is less common."
The 3 General Link Layer Models,"<b>Connectionless, No Acknowledgements</b><br>Used in low error rate networks, such as wired Ethernet (IEEE 802.3).<br>No connection setup is required before data transmission - frames are simply sent without pre-establishing a communication path.<br>No acknowledgments (ACKs) are sent back by the receiver, meaning frame loss is not detected at the Link Layer.<br>If a frame is lost, it is not retransmitted at this layer; instead, higher layers (like TCP) handle reliability if needed.<br>Example: Standard Ethernet, where a frame may be dropped if a collision or congestion occurs, but there is no retransmission at the Link Layer.<br><br><b>Connectionless, Acknowledged<br></b>Used in medium-to-high error rate networks, such as Wi-Fi (IEEE 802.11).<br>No dedicated connection is established, but each frame sent expects an ACK (Acknowledgment) from the receiver to confirm successful delivery.<br>If no acknowledgment is received within a time window, the frame is retransmitted.<br>This method improves reliability compared to connectionless, unacknowledged networks but introduces higher overhead due to ACK packets.<br>Example: Wi-Fi networks, which use ACK frames for reliable delivery over a wireless medium that is more prone to interference and signal loss.<br><br><b>Connected, Acknowledged</b><br>Used in long-delay or unreliable networks, such as satellite links and certain cellular networks.<br>A connection-oriented approach where a communication session is established before data transfer begins (negotiates flow control and congestion control before sending data).<br>Frames are sent only after a connection is established and each frame is acknowledged to ensure delivery.<br>This model helps reduce transmission errors in environments with high latency and frequent packet loss, but it adds setup overhead."
Strategies for Handling ACKs on the Link Layer,"Different strategies exist for handling ACKs (Acknowledgments) and retransmissions at the Link Layer to ensure reliable data transfer.<br><br><b>1. Stop-and-Wait ARQ (Automatic Repeat reQuest)</b><br>The Simplest Method<br>The sender transmits one frame and waits for an ACK before sending the next frame.<br>If the ACK is received, the next frame is sent.<br>If no ACK is received (due to frame loss or corruption), the sender retransmits the same frame after a timeout.<br>Advantage: Simple to implement.<br>Disadvantage: Inefficient for long-distance or high-latency links because the sender must wait before sending more data.<br><br><br><b>Pipelining (Sliding Window Protocols)</b> <br>More Efficient<br>Pipelining improves efficiency by sending multiple frames before waiting for ACKs.&nbsp;<br>The following are types of pipelining:<br><b>Go-Back-N ARQ</b><br>The sender can send multiple frames (up to a set window size) before receiving the first ACK.<br>If an ACK is missed or an error occurs, all frames after the lost one are retransmitted.<br>Advantage: Easier to implement than Selective Repeat.<br>Disadvantage: Inefficient when errors occur, as multiple frames may be retransmitted unnecessarily.<br><b>Selective Repeat ARQ</b><br>Also uses pipelining, but only retransmits the specific lost/damaged frames, rather than the entire sequence.<br>The receiver must store out-of-order frames until the missing ones are retransmitted.<br>Advantage: More efficient than Go-Back-N since only the necessary frames are resent.<br>Disadvantage: Requires more complex buffering and sequence tracking."
Error Detection Methods on the Link Layer,"<div>The Link Layer can attempt to provide a ""virtually error-free"" connection to the Network Layer by detecting and, in some cases, correcting errors before forwarding data.</div>This involves error detection and packet loss detection, which can trigger retransmissions if needed.<br>However, higher layers (e.g., TCP at the Transport Layer) may also implement their own error-handling mechanisms.<br>No radio link (e.g., Wi-Fi, satellite, cellular) is 100% error-free, so error detection is crucial in wireless communication.<br><br><b>Detecting errors:</b><br><div>1. Parity Bit (Simplest Method)</div>A single bit is added to each frame to indicate even or odd parity.<br>Even Parity: The number of 1s in the frame, including the parity bit, is even.<br>Odd Parity: The number of 1s is odd.<br>Limitation: Can only detect single-bit errors; multiple-bit errors may go unnoticed.<br><br>2. Checksums (Basic Error Detection)<br>A checksum value (computed by summing the data in a specific way) is appended to the frame.<br>The receiver recalculates the checksum and compares it to the received checksum.<br>If they don’t match, an error is detected.<br>Limitation: Can miss certain types of errors (e.g., errors that cancel each other out).<br><br>3. Cyclic Redundancy Check (CRC) – Most Robust Detection Method<br>A mathematical function (polynomial division) generates a CRC value based on the frame's data.<br>The CRC value is appended to the frame.<br>The receiver performs the same calculation and compares the result.<br>Highly effective at detecting errors, even multiple-bit errors.<br>Used in Ethernet (IEEE 802.3), Wi-Fi (IEEE 802.11), and many other protocols.<br><br><br><br>If an error is detected we can use&nbsp;Automatic Repeat reQuest (ARQ) to retransmit the frame.&nbsp;<br>Could be Stop-And-Wait ARQ,&nbsp;Go-Back-N ARQ, Selective Repeat ARQ ect."
Framing (Definition + Example Method),"<div>Since the physical layer only transmits raw bits, the link layer must:</div>- Group bits into meaningful data units (frames).<br>- Ensure data is transmitted without errors.<br>- Mark the beginning and end of each transmission unit so the receiver knows where a message starts and ends.<br><br>The link layer does not fragment and reassemble network-layer packets across multiple frames. <br>Each frame at the link layer encapsulates one network-layer packet (or a fragment of one, if it was already fragmented at the network layer).<br>Each frame contains (header[source+dest MAC, network protocol indicator], payload, trailer [CRC]).<br><br>There are various appropaches, but one example is using a FLAG byte value to mark the start and end.<br>If the FLAG occurs in the actual data, we need an Escape byte.<br>If an Escape byte occurs in the data, Escape that.<br>"
MAC Protocol (+Address Format),"The Media Access (MAC) Protocol manages access to/from the physical (PHYS) medium<br><b>It is part of the link layer</b><br><br>It has a mechanism for sending frames to/from PHYS and typically manages channels/frequencies/collisions<br>Typically it is very specific to a type of PHYS layer and may need extra bits added to the frame<br>Throughout a network there may be many different PHYS mediums with different MAC protocols<br><br>MAC addresses are currently defined to be 48 bits, but extensible to 64.&nbsp;<br>A device can have multiple MAC addresses for each form of physical connection (e.g: 1 for ethernet and 1 for WiFi)<br>They need to be unique (24 bits to vendor allocation, last 24 bits assigned by vendor)<br>Written in blocks of hexidecimal<br>E.g:<br>F0:1F:AF:12:34:56<br>We have 6 bytes here (one hex digit = 4 bits)<br>Here, F0:1F:AF is the OUI assigned to Intel, and 12:34:56 is the unique NIC identifier."
Handling Media Contention on the Link Layer,"Since many devices may interact with a physical medium at once there may be contention.<br><br><b>Carrier Sense Multiple Access with Collision Detection (CSMA/CD)</b><br>Used by original wired ethernet<br>Works like a polite telephone conversation<br>The sender listens to see if the media is busy and waits until it is free to start talking<br>If a collision is detected, the sender backs off before retransmitting after a set delay<br><br><b>Carrier Sense Multiple Access with Collision Avoidance (CSMA/CA)<br></b>Used by WiFi because WiFi devices generally can't send and receive at the same time<br>Before transmission, the device waits for a random backoff period (determined by an exponential backoff algorithm) to minimize simultaneous transmissions.<br>After successful data transmission, the receiver sends an ACK (Acknowledgment).<br>If no ACK is received, the sender assumes a collision or packet loss and retries after a backoff period.<br>Can also optionally use Request to Send / Clear to Send (RTS / CTS) signalling to the Access Point (AP) to improve performance."
Link Layer Header + Example Frame&nbsp;,<b>Contains:</b><br>Destination + Source MAC address (identifies the next hop device on the local network)&nbsp; (6 bytes each)<br><b>The protocol contained within the network header as a reference</b> (IPv4 / IPv6 for example) (2 bytes)<br>An optional frame check sequence for error checking e.g: Cyclic Redundancy Check (CRC)&nbsp;(4 bytes)<br><br>The payload is 46–1500 bytes<br><br>So a total frame may look like (in Hex):<br>FF:FF:FF:FF:FF:FF (destination MAC) → 11:22:33:44:55:66 (source MAC) → 08:00 (IPv4 ) → Payload → CRC
The Network Layer (Functions),"Performed by the OS of PCs and routers<br>Performs routing to determine the best path for a packet to reach its destination.<br>Determines the next hop, deciding which router or device to forward the packet to next (based on the routing table)<br>Handles fragmentation and reassembly if the packet is too large for the underlying data link layer (IPv4 only)"
Reliability of the Network Layer (Checksums?),Routers forward packets on 'best effort' basis<br>Packets can be dropped or delayed due to congestion / faults<br>IPv4 can have a checksum in the header to check if there are any errors (only errors in the header)<br>IPv6 has no checksum<br>Neither perform any form of correction (receiver fixes errors from the sender)
IPv4 vs IPv6 Main Differences,"<b>Addressing:</b><br>Address Length: IPv4 has 32-bits (4 bytes), IPv6 has 128-bits (16 bytes)<br>Address Format: IPv4 - Dotted decimal: 192.168.1.1,&nbsp; IPv6 -&nbsp;Hexadecimal, separated by colons: 2001:0db8:85a3::8a2e:0370:7334<br>Number of Addresses: IPv4 - 4.3 billion (almost full) IPv6 ~ 3.4 × 10<sup>38</sup> (plenty of space)<br><br><b>Header Structure:</b><br>Header Size: IPv4 - 20 bytes (without options), IPv6 - 40 bytes (fixed)<br>Header Complexity: IPv4 - Variable length with options, IPv6 - Simplified, fixed length<br>Checksum: IPv4 - Yes (Header Checksum), IPv6 - No (Relies on other layers for error detection)<br>Fragmentation: IPv4 - Done by routers &amp; sender, IPv6 - Only sender fragments (routers do not)<br><br>The main differences are IPv6 has 4x the amount of bytes for addresses, a fixed length header, does not include checksums or allow fragmentation.&nbsp;<br>Finally IPv6 also has better multicast (and removes broadcast), it is more efficient to route and makes encryption mandatory."
IPv4 Fragmentation (and IPv6?),"IPv4 Fragmentation IPv4 allows routers to perform fragmentation when a packet exceeds the Maximumum Transmission Unit (MTU) of a network link (typically 1500 bytes for Ethernet). <br>Each fragment receives a copy of the original IP header with updated fragmentation fields. <br>If the ""Don't Fragment"" (DF) flag is set, the packet is dropped instead of being fragmented.<br><br>IPv6, on the other hand, does not allow routers to fragment packets. <br>Instead, the sending host is responsible for performing fragmentation using Path MTU Discovery (PMTUD)."
IPv6 Address Conventions (e.g: 2001 : 0630 : 00d0 : f500 : 0000 : 0000 : 0000 : 0064),"IPv6 Addresses are long<br>(8 groups of 16 bits, which can be represented by 4 hexadecimal digits)<br><br>We can simplify them:<br>Omit leading 0s in a block<br>Replace a single set of repeated 0 blocks with ""::""<br><br>e.g: 2001:630:d0:f500::64"
The four main types of communication on the network layer,"<b>Unicast (One-to-One) </b><br>Definition: A single sender communicates with a single receiver.<br>Example: Sending an email, loading a website, or making a direct voice/video call.<br>IPv4 Example: 192.168.1.10 → 192.168.1.20<br>IPv6 Example: 2001:db8::1 → 2001:db8::2<div>Most common type of network communication.<br><br><b>Multicast (One-to-Many)</b><div>Definition: A single sender transmits data to multiple specific receivers who are part of a multicast group.<br>Example: Live video streaming, IPTV, or stock market data feeds.</div>Uses special multicast addresses:<br>IPv4 Range: 224.0.0.0 – 239.255.255.255<br>IPv6 Range: FF00::/8 (e.g., FF02::1 for all nodes on a local network)<div>More efficient than unicast for group communication since the same data is sent only once and duplicated by network devices.<br><br><b>Broadcast (One-to-All) [Only in IPv4]</b><div>Definition: A single sender transmits data to all devices on the network.<br>Example: ARP requests, DHCP discovery messages.</div>IPv4 Broadcast Address:<br>Local Network Broadcast: 192.168.1.255 (if subnet mask is /24)<br>Limited Broadcast: 255.255.255.255 (reaches all devices in the same network)<div>IPv6 does NOT support broadcast. Instead, it uses multicast.<br><br><b>Anycast (One-to-Closest One)</b><div>Definition: A sender communicates with only one receiver, but the closest (lowest-latency) receiver out of multiple possible ones.<br>Example: Content Delivery Networks (CDNs), DNS resolution.</div>Only in IPv6 (IPv4 does not have a dedicated anycast system).<br>Example Use: A user trying to access 8.8.8.8 (Google’s DNS) is routed to the nearest DNS server.<div>Great for load balancing and redundancy.</div></div></div></div>"
What is DNS?,"<b>DNS (Domain Name System) – The Internet’s Phonebook</b><br>An application layer protocol.<br>Fundamentally a <b>distributed, hierarchial system.</b><br>DNS (Domain Name System) is a system that translates human-readable domain names (like google.com) into IP addresses (like 142.250.187.46) so computers can communicate over the internet. <br>(Can also return other information such as email address servers).<br><br><b>How DNS Works (Step-by-Step)</b><br>User enters a domain name (e.g., secure.ecs.soton.ac.uk) in a browser.<br>We query our local DNS server (probably our ISP's), and check if the IP is cached.<br>If not found, it queries a DNS server.<br>Recursive DNS Query happens:<br>- The Root DNS Server (knows where to find .uk) is contacted.<br>- Whoever controls .uk knows where to find .ac, whoever controls .ac knows where to find .soton<br>- The university servers know where to find .ecs.<br>- The Authoritative Name Server (.ecs) provides the final IP address.<br>Browser connects to the retrieved IP address and loads the website."
Subnetting + Netmasks + Prefixes,"<div>Subnetting is the process of dividing a large network (IP range) into smaller, more manageable subnetworks (subnets). <br>This helps improve efficiency, security, and performance by organizing devices logically within a network. (Not meant to conserve IP addresses, but can prevent waste through efficient organisation)<br><br>A netmask (or subnet mask) is a 32-bit number used in networking to divide an IPv4 address into network and host portions.&nbsp;<br>It helps determine which part of an IP address refers to the network and which part identifies the specific device (host) within that network.<br>E.g: 152.78.0.0/16<br>This means that the first 16 bits are common to the network (152.78) and the last 16 bits are the hosts' (0.0)<br>The /16 is the subnet mask (in CIDR notation), and can also be represented as 255.255.0.0<br><br><br>Prefixes are the equivalent of subnet masks for IPv6 and have some minor differences.<br>Even though there are plenty of IP addresses available in IPv6, subnetting is still used for hierarchial organisation and efficiency.<br>A prefix in IPv6 is represented as <br>2001:db8:abcd:0012::/64<br>They only use 64 bit prefixes, and they also only use the CIDR notation<br><br>When routing to a subnet, the IP addresses within the publically advertised range of the subnet are not publically visible (we do not know which one corresponds to which device if any), however the router does. We just route to the router and let it handle the internal functionality.<br><br></div>"
Classless Inter Domain Routing (CIDR),"IPv4 addresses were originally allocated in one of three classes:<br>Class A: a /8 prefix, 16 million available addresses on the network<br>Class B: a /16 prefix, 650,000 available addresses on the network<br>Class C: a /24 prefix, 256 available addresses on the network<br><br>This however was inefficient.<br>Wasted IP addresses → Even small networks would receive an unnecessarily large block of addresses.<br>Lack of flexibility → Fixed class sizes meant that organizations couldn't efficiently allocate space based on actual needs.<br>IPv4 exhaustion risk → Many addresses were wasted due to rigid class sizes.<br><br><br>CIDR allows variable length subnets, which helps to reduce IPv4 address consumption and improve efficiency (e.g: /28, /18 ect.)"
Available addresses in an IPv4 Subnet (e.g: 152.78.70.0/24),"Not all addresses in a subnet are usable<br>The first address is reserved to represent the subnet itself and cannot be assigned to a device.<br>The last address is the broadcast address, used for broadcasting to all devices on the subnet.<br>One address is required for the router (typically the first or last usable address)<br><br>This means that if we have a subnet 152.78.70.0/24<br>We have 256 total addresses<br>But only <b>253</b> available addresses for hosts"
Private Addressing + NAT + CGNAT,"<b>Primary purpose is to conserve IPv4 addresses.<br><br>RFC 1918 - Private IPv4 Addressing</b><br>RFC 1918 (Request for Comments 1918) defines private IP address ranges that are not routable on the public internet.<br>These addresses are used for internal networks (e.g., home Wi-Fi, corporate networks) and require Network Address Translation (NAT) to communicate with the internet.<br><b>Prevents Conflicts with Public IPs<br><br>NAT (Network Address Translation)</b> <br>NAT is a technique that allows multiple devices with private IPs to share a single public IP address when accessing the internet.&nbsp;<br><div>The router acts as a middleman between the internal network (private IPs) and the internet (public IP). <br>The router is responsible for keeping track of connections and ensuring that responses go to the correct internal host.</div>This helps with IPv4 address shortage and security but has an architectural overhead.<br>NAT is very common on home networks (1 IPv4 from ISP, RFC 1918 internally)<br>The most common way of doing this is&nbsp;PAT (Port Address Translation), where the router keeps&nbsp;track of active connections using port numbers.<br><br><b>CGNAT (Carrier-Grade NAT)</b><br>ISPs have been running out of IP addresses<br>Many are now doing CGNAT, where customers share a public address and get private addresses between them<br><br><br>IPv4 is heavily reliant on NAT, whereas IPv6 restores end-to-end communication."
Routing Tables,"Contains addresses of other devices we can route to in our network<br>All hosts on a network have a routing table<br>A PC may have its own local router (default gateway) and other devices on the LAN<br>A router will have addresses of other routers and devices on its LAN<br><br>For most hosts, the routing table includes:<br>Destination IP prefixes and the interface or next hop to use<br>The local subnet that the host is connected to<br>A catchall ""default route"""
How a router decides what route to take? <br><br>E.g:&nbsp; <br>Routing table contains 192.168.14.0/23 and&nbsp;192.168.12.0/22<br>We want to get to&nbsp;<strong>192.168.15.10</strong>,"When looking at a destination IP address, a router will pick the most specific matching route first.<br>This means the route with the most specific prefix, (given that it includes our destination in its range).<br><br><br>If there are two routes with the same specificity, then the router picks the one with the highest priority.<br>The priority is predefined for routes, and could be a measure of speed, efficiency, ect.<br>The priority is ranked by a metric, a lower metric means a higher priority.<br><br><br>Range of both routes:<br>192.168.14.0/23<br>Subnet mask: 255.255.254.0<br>Address range: 192.168.14.0 → 192.168.15.255<br><br><div>192.168.12.0/22</div>Subnet mask: 255.255.252.0<br>Address range: 192.168.12.0 → 192.168.15.255<br><br>Both cover&nbsp;192.168.15.10<br>However 192.168.14.0/23 has an extra bit in the prefix so is more specific."
Prefix Aggregation,"Subnet's prefixes can be aggregated with other adjacent subnets<br>This reduces the number of routing table entries and helps improve network efficiency.<br><br>E.g: 192.168.10.0/24 and 192.168.11.0/24&nbsp;become 192.168.10.0/23<br><br>This means routers don't need to know the presence of every subnet on the internet.<br><br>Example:<br>A company's ISP aggregates all their internal subnets into one route: 192.168.0.0/22<br>Inside the company, existing routers still know how to reach 192.168.1.0/24 and 192.168.2.0/24."
Autonomous Systems (AS),"An Autonomous System (AS) is a collection of IP networks and routers under a single administrative domain that shares a common routing policy.<br>The internet is made up of interconnected Autonomous Systems, each controlled by an entity such as an ISP, university, or large organization.<br><br>Each AS is assigned a unique Autonomous System Number (ASN) by regional internet registries (RIRs).<br>Interior Gateway Protocols are used within an AS, e.g: within a corportate network.<br>Exterior Gateway Protocols are used between ASes (e.g: The Border Gateway Protocol [BGP])"
Types of Interior Gateway Protocols,"<b>Distance Vector</b><br>Talk only to directly neighbouring routers<br>Exchange ""best"" route information for any known prefixes with direct neighbours<br>e.g: RIP<br><br><b>Link State</b><br>Talk to all routers to establish full knowledge of the routers in a site<br>Routers flood information messages describing their connected neighbours around entire site network<br>e.g: IS-IS, OSPF"
RIP (+Limitations),"Routing Information Protocol (RIP)<br>One of the oldest routing protocols<br>Uses hop-count as a metric<br>Routers send their whole routing table periodically (every 30 seconds) to directly connected routers<br>This includes destination network (prefix) and distance (cost) in hops<br>Receiving routers update their view of the best route (lowest distance) to a given network (prefix)&nbsp;<br><br>Limitations:<br>Updates are only sent every 30 seconds<br>Updates are not acknowledged (UDP)<br>Metrics are simple hop count values limited to 15 (16 means unreachable)<br>Routers don't understand the topology, which can lead to infinite loops"
Link State Routing,"The de facto enterprise routing algorithm.<br>Usually IS-IS or OSPF.<br><br>Steps:<br>1. Discovers neighbours &amp; determines cost metric. (sends broadcast packets on all interfaces)<br>2. Flood message with this information to all routers. (each router creates link state packets based on neighbours and costs to reach them which are then sent to all routers)<br>3. Use received messages to build topology: compute shortest paths for prefixes served by any router (often Dijikstra's algorithm).<br><br>Messages are sent periodically, or any time a change in connectivity is detected.<br>Both ends of a link must agree for it to be valid.<br>All routers learn the full network topology.<br><br><br>Link state converges faster than distance vector (RIP)<br>E.g: OSPF can detect changes to topology and converge in seconds<br><br>It is also better at avoiding loops<br>Every node knows everything"
BGP (Definition + How it works + Downsides),"<b>Definition</b><br>The Border Gateway Protocol (BGP) is the de facto protocol for routing between ASes on the internet.<br>NOTE:While primarily used as an Exterior Gateway Protocol (EGP), it can also be used internally as an Interior BGP (iBGP) within a large AS.<br><br><b>How BGP Works</b><br>BGP is distance-vector-like, but instead of simple hop counts, it considers:<br>AS Path: The sequence of ASes a route must pass through.<br>Path Attributes: Additional factors like local preference, Multi-Exit Discriminator (MED), and AS path length to determine the best route.<br>Since ASes know the full AS path,<b> they can detect routing loops</b> if their own AS number appears in a received path.<br><br><b>Downsides:</b><br><div>BGP Relies on Trust</div>BGP assumes that other ASes provide honest route information.<br>A malicious or misconfigured peer can advertise incorrect routes (e.g., BGP hijacking).<div><br>BGP is Slow to Converge</div>Updating BGP takes significant time and resources.<br>Links can go up and down for various reasons.<br>If updates happen too quickly, it can cause route flapping, leading to instability.<div><br>Routing Table Growth Issues</div>Routers have limited BGP table sizes.<br>The rapid expansion of the internet and IPv4 exhaustion are pushing hardware limits, especially for older routers.<br>"
General Issues with Routing,"<div><b>Routes across the internet can change quickly</b></div>The best route for a destination can change frequently due to network congestion, failures, or policy changes.<br>BGP updates propagate slowly, leading to periods of instability.<div><br><b>Path and length may change on a per-packet basis</b></div>The internet follows a packet-switched model, meaning different packets in the same communication may take different routes.<br>This can cause out-of-order delivery, leading to performance issues for real-time applications.<div><br><b>Routes are often asymmetric</b></div>The path from A → B may differ from the path from B → A.<br>This happens because routing is determined independently in each direction, based on BGP policies, load balancing, and available paths.<br>Asymmetric routing can lead to increased latency, packet loss, and debugging difficulties.<br><br><div><b>Not all routes are equal</b></div>Some paths are fast (low latency, high bandwidth).<br>Some are slow (congested, long paths, high latency).<br>Some have packet loss, high jitter, or reliability issues.<br>Some routes pass through untrusted or less secure networks, posing security risks.<br>"
What is latency? (Factors + Types),"<b>Definition</b><br>Latency is the time delay between sending a packet of data and receiving a response. <br>It is typically measured in milliseconds (ms) and plays a crucial role in network performance, especially for real-time applications like video calls, gaming, and financial trading.<br><br><b>Types of Latency:</b><div><b>Propagation Delay</b></div>The time it takes for a signal to physically travel through the network medium (fiber optics, copper cables, wireless).<br>Speed limit: Signals travel at ~2/3 the speed of light in fiber.<div><br><b>Transmission Delay</b></div>The time required to push all the bits of a packet onto the link.<br>Depends on: Packet size and link bandwidth.<div><br><b>Processing Delay</b></div>The time routers/switches take to process the packet header and determine where to forward it.<br>Depends on: Routing complexity and hardware performance.<div><br><b>Queuing Delay</b></div>The time a packet waits in a router’s buffer before being forwarded due to congestion.<br>Increases with: Network congestion and traffic bursts.<br><br><br><b>Factors Affecting Latency<br></b>Physical Distance → Longer distances = Higher latency.<br>Network Congestion → Overloaded routers/switches = More queuing delay.<br>Routing Complexity → More hops between source &amp; destination = Higher processing delay.<br>Medium Type → Fiber is faster than copper; satellite connections have very high latency.<br>"
What is Packet Loss? (Causes + Effects),"<div><b>Definition</b><br>Packet loss occurs when one or more data packets fail to reach their destination in a network. <br>This can result in delays, degraded performance, or even connection failures depending on the severity of the loss and the application in use.<br><br><b>Causes of Packet Loss:</b><div><b>Network Congestion</b></div>The most common cause. When routers and switches are overwhelmed with traffic, they drop packets to manage the load.<div><br><b>Hardware Issues</b></div>Faulty network devices (e.g., routers, switches, cables) can cause packet loss.<br>Wireless interference (e.g., from other Wi-Fi networks or electronic devices) can corrupt packets.<div><br><b>Software &amp; Configuration Issues</b></div>Mismatched MTU (Maximum Transmission Unit) settings can lead to dropped packets.<br>Overloaded servers may drop packets if they cannot handle requests fast enough.<div><br><b>Security Attacks</b></div>Denial-of-Service (DoS) attacks flood networks, causing routers to drop packets.<br>Man-in-the-middle (MITM) attacks can intercept and discard packets.<div><br><b>Routing Issues</b></div>Fluctuating network paths (BGP instability) can cause packet loss if packets are misrouted or sent through overloaded paths.<br>Poor ISP peering agreements can degrade traffic quality and cause loss.<br><br><b>Effects of Packet Loss<br></b>Web browsing: Pages load slowly or fail to load entirely.<br>Streaming: Video/audio stutters or buffers frequently.<br>Online gaming: Lag, rubberbanding, and disconnections.<br>VoIP (Voice over IP) calls: Choppy or robotic-sounding audio.<br>Financial trading: Delays in order execution, potentially costly mistakes.<br></div>"
ICMP,"Internet Control Message Protocol&nbsp;<br>ICMP packets are encapsulated in standard IP packets (They are the payload of an IPv4 or IPv6 packet)<br><div>It is an essential part of the IP suite but is mainly used for sending control messages rather than transferring data.<br>It does not use port numbers, as it is for the network itself, not for applications on it.&nbsp;<br>Therefore it never goes further than routers and operating system's network stack on devices. (Never see transport or application layer).<br>The actual data is the payload, encapsulated by the ICMP header declaring the type of message, encapsulated by an IPv4/IPv6 header for routing (which declares the underlying structure as ICMP).</div><br>Function in IPv4:<br>Used for error reporting (e.g., unreachable host, TTL exceeded).<br>Provides informational messages (e.g., echo request/reply in ping).<br><br>Function in IPv6:<br>Includes router advertisement (helps hosts configure network settings).<br>Supports neighbor discovery (replaces ARP for address resolution).<br><br><img src=""paste-c239a92ca4dda3a96844f64f6e3e2eaa84dc921d.jpg""><br>"
DHCP&nbsp;,"<b>DHCP (Dynamic Host Configuration Protocol)<br></b>An application layer protocol<br>It operates using a client-server model, where a client requests an IP, and a DHCP server assigns one.<br>Purpose: Automates IP address configuration on networks (IPv4).<br>Why?:<br>- Manually assigning addresses is tedious and error-prone.<br>- Static IP addresses are impractical for many devices on networks (e.g: public WiFi)<br>In most home and small office networks, the router also acts as the DHCP server. <br>However, in enterprise or large-scale networks, a dedicated DHCP server (running on a separate machine, like a Windows Server or Linux DHCP service) is often used.<br><br>DHCP Process:<br>DHCP DISCOVER: Host broadcasts a request for an IP address.<br>DHCP OFFER: Server responds with an available IP address.<br>DHCP REQUEST: Client requests the offered address.<br>DHCP ACK: Server confirms and sends lease duration &amp; network configuration.<br><br>What is assigned?<br>IP Address<br>Subnet Mask<br>Default Gateway<br>DNS Server"
SLAAC,"StateLess Address AutoConfiguration (SLAAC)<br>An alternative to DHCP for IPv6<br>Enables a device to self-configure its IPv6 address without relying on a DHCPv6 server.<br><br>Done through <b>NDP (Neighbor Discovery Protocol) in IPv6</b>.<br>Uses Router Advertisements (RAs) from an IPv6 router to generate a unique address.<br>Simplifies network setup, especially in environments where DHCPv6 is not required.<br><br>Stateless – the device generates its own address and the router does not track assigned addresses.<br>Relies on ICMPv6 Router Advertisement (RA) messages from routers.<br>Commonly used in environments where minimal configuration is needed (e.g., home networks)."
DHCPv6,"(Stateful) Dynamic Host Configuration Protocol for IPv6<br><br>Similar to DHCP for IPv4 but:<br>Unlike DHCPv4, DHCPv6 does not assign default gateways. Instead, it relies on Router Advertisements (RAs) from the Neighbor Discovery Protocol (NDP) to provide essential network information.<br>Uses DHCP Unique Identifier instead of MAC address<br><br>Slightly different terminology:<br>Solicit instead of DISCOVER<br>Advertise instead of OFFER<br>Reply instead of ACK"
Transport Layer&nbsp;,<b>Manages communication between applications using ports</b>.<br><br>Determines which application should send/receive data.<br><br>Adds the transport protocol <b>(TCP/UDP)</b> to the data.<br><br>The <b>header structure varies depending on the protocol</b>.<br><br>May handle<b> error checking and correction</b>.<br><br>Operates within the <b>OS kernel</b>.
TCP Features (+Header),"<b>Transmission Control Protocol</b><br>A transport layer protocol<br>Connection oriented<br>Includes acknowledgements and retransmissions<br>Provides flow control / congestion control for segments<br>TCP will adjust sending rate over time<br><b>Minimizes packet loss</b><br><br>TCP Header:<br>Source Port – The sender’s port number.<br>Destination Port – The receiver’s port number.<br>Sequence Number – Identifies the position of the first byte in the transmitted segment.<br>Acknowledgment Number – Indicates the next expected byte from the sender (used for reliable delivery).<br>Data Offset (TCP Header Length) – Specifies the length of the TCP header.<br>Flags (Control Bits) – Includes SYN, ACK, FIN, RST, PSH, and URG flags.<br>Window Size – Specifies how much data the receiver can accept (flow control).<br>Checksum – Used for error detection.<br>Urgent Pointer – Points to urgent data (used if the URG flag is set).<br>Options (Optional Field) – Can include timestamps, selective acknowledgments, etc.<br><br><b>It is a minimum of 20 bytes, but is variable in size due to the inclusion of the header length.&nbsp;<br></b>Could be up to 60 bytes.<br>"
What are sockets? (TCP Connection - 3 way handshake),"<div>A socket is essentially defined by a combination of:</div>IP Address – Identifies the device on the network.<br>Port Number – Identifies the specific application or service on the device.<br>Protocol (TCP/UDP) – Determines the communication method used.<br><br><div>A web server running on IP: 192.168.1.10 and Port: 80 (HTTP) using TCP would have a socket like:</div><div>192.168.1.10:80 (TCP)<br><br><div>When a client connects from 192.168.1.50 using a random port (e.g., 50000), a complete socket pair (TCP connection) is formed:</div><div>Client Socket: 192.168.1.50:50000 (TCP)<br>Server Socket: 192.168.1.10:80 (TCP)<br><br>Socket pairs are used to form connections in TCP<br><div>A TCP connection is established through the three-way handshake:</div>Client → Server: Sends SYN (synchronize).<br>Server → Client: Sends SYN-ACK (synchronize + acknowledgment).<br>Client → Server: Sends ACK (acknowledgment), connection established.<div>Once established, the connection remains open for data exchange until either side initiates a termination process (FIN-ACK sequence).</div></div></div>"
How TCP ensures Reliability,"ACKs are sent back by receiver<br>Sender must detect and retransmit lost packets<br>There are numerous methods for this, timeouts, sliding window, ect."
TCP Flow Control,"Flow control is when the sender manages their transmission rates to accomodate for a slow receiver.<br>TCP uses a sliding window protocol<br>The receiver has a limited incoming buffer size<br>The sender should not send data unless the receiver indicates it has buffer space to accept it<br>The 'sliding window' is effectively the buffer space the receiver says it has available at any given time, which changes regularly.<br><br>Functionality:<br>The sender sends a segment with a sequence number and starts a timer<br>The receiver replies with an acknowledgment number showing next sequence number it expects to receive and its available window size<br>If the sender's time goes off before this it will retransmit<br>If the receiver says window size is 0, the sender may send a 1-byte probe to get a new window or advertisement"
TCP Congestion Control,"Congestion control is when the sender limits their transmission rate due to congestion on the network, not necessarily due to the receiver.<br>This run's alongside the receiver's sliding window, and uses the smaller of the two windows when sending.<br><br>The congestion window size follows a 'slow start' approach.<br>We add one segment's worth of size per segment acknowledged before the acknowledgment timer goes off.<br>If successfully acknowledged, we keep doubling the window each trip until it is no longer all acknowledged.<br>However flow control can override congestion control and vice versa to ensure we always transmit less than or equal to the maximum of these two limiting factors."
UDP Properties,"User Datagram Protocol<br><br>Connectionless - no sequence numbers or ACKs<br>If retransmission is required, the application layer has to do it<br>Low overhead - uses less bandwidth for header and no connection management needed<br>High packet loss"
UDP Header,"Source port<br>Destination Port<br>Total length (Header + Payload, minimum is 8 bytes if we have no payload)<br>UDP checksum (optional - set to zero if not used)<br><br><b>The header is fixed at only 8 bytes</b>."
Ethernet Frames,"<div>Frames are hardware-dependent and vary based on the network technology.<br><br></div><div>An Ethernet frame includes:</div>48-bit source and destination MAC addresses<br>Optional VLAN ID and frame priority (if using IEEE 802.1Q tagging)<br>EtherType or Length field (indicates the protocol or payload size)<br>Payload (data)<br>Frame Check Sequence (FCS) for error detection<br><br><div>Maximum Transmission Unit (MTU):</div>Typically<b> 1500 bytes </b>for standard Ethernet.<br>Jumbo frames can extend this up to 9000 bytes, depending on network support.<br>"
Internet Hierarchy Summary,"<div><b>Interconnected Autonomous Systems (ASes)</b></div>The Internet is composed of Autonomous Systems (ASes) - large networks operated by ISPs, enterprises, or institutions.<br>Each AS has its own routing policies and is identified by an Autonomous System Number (ASN).<br>They communicate using Border Gateway Protocol<b> (BGP) </b>to exchange routing information.<div><br><b>Interconnected Routes</b></div>Within an AS, there are multiple interconnected routers that form a routing infrastructure.<br>These routers use Interior Gateway Protocols (IGPs) like OSPF (Open Shortest Path First) or EIGRP (Enhanced Interior Gateway Routing Protocol) to manage internal routes.<br>Packets travel across networks and subnets via routing tables and forwarding mechanisms.<br><br><div><b>Interconnected Devices</b></div>End devices (e.g., PCs, smartphones, IoT devices) connect to networks through switches, access points, and routers.<br>Switches facilitate communication within a Local Area Network (LAN) by forwarding Ethernet frames based on MAC addresses.<br>Routers connect different networks and make forwarding decisions based on IP addresses.<br>"
Ethernet Switches Functions,"<li><b>Forwarding:</b> Ethernet switches forward packets only to the intended recipient on the LAN, reducing unnecessary traffic. <b>They improve the efficiency of a LAN.</b></li><li><strong>Filtering &amp; Port Selection:</strong> Switches decide whether to forward a frame and, if so, determine the appropriate port based on the destination MAC address.</li><li><strong>MAC Address Learning:</strong> Switches learn and maintain a table of Ethernet MAC addresses to efficiently route frames.</li><li><strong>Frame Storage &amp; Error Checking:</strong> Some switches can store and inspect Ethernet frames before forwarding, checking for errors such as CRC failures.</li><li><strong>Advanced Features:</strong> Higher-end switches support additional features such as <strong>VLANs</strong> for network segmentation, <strong>Quality of Service (QoS)</strong> for traffic prioritization, and <strong>port security</strong> for enhanced security.</li>"
MAC Learning,"<li><strong>Purpose:</strong> Allows a switch to forward frames only to the correct port where the destination device is connected, reducing unnecessary network traffic.</li><li><strong>MAC Address Observation:</strong> The switch observes incoming source MAC addresses on each port and stores them in a <strong>MAC address table</strong> (also called a switch forwarding table).</li><li><strong>Efficient Forwarding:</strong> Future frames are forwarded only to the learned ports associated with the destination MAC address.</li><li><strong>Broadcast Handling:</strong> Frames with unknown or broadcast MAC addresses are still forwarded to all ports.</li><li><strong>Traffic Isolation:</strong> Hosts only receive traffic specifically addressed to them, improving security and efficiency.</li><li><strong>Unknown MAC Addresses:</strong> If a destination MAC address is not in the table, the switch <strong>floods</strong> the frame to all ports except the source port.</li><li><strong>MAC Table Aging:</strong> Entries in the MAC table expire after a short period (e.g., 60 seconds) if no traffic is received from that MAC address.</li>"
ARP,"<div>ARP is used to resolve IP addresses from the network layer into the correct MAC (Media Access Control) address, enabling communication within a local network.<br>NOTE: This is <b>IPv4 only.</b><br><br></div><div><strong>How It Works:</strong></div><ol><li>When a device needs to send data to a specific IP address, its Network Interface Card (NIC) broadcasts an ARP request on the LAN, asking:<br><em>""Who has this IP address?""</em></li><li>The response depends on the network location of the target device:<ul><li><strong>Same Network:</strong> The host with the requested IP replies with its MAC address.</li><li><strong>Different Network:</strong> If the target IP belongs to a different network, the router (acting as a gateway) responds with its own MAC address, allowing traffic to be forwarded correctly.</li></ul></li></ol><div><strong>After Resolution:</strong></div><ul><li>The sender uses the obtained MAC address to encapsulate the data in an Ethernet frame for transmission.</li><li>The resolved MAC address is cached temporarily (e.g., <strong>15-45 seconds on Windows 10</strong>) to avoid repeated ARP requests for the same IP in a short period.</li></ul>"
What are routers?,<div>A <strong>router</strong> is a networking device that forwards data packets between different networks. It determines the best path for data to travel from the source to the destination based on IP addresses.</div><div><strong>Key Functions:</strong></div><ol><li><strong>Network Traffic Management</strong> – Directs data between devices across different networks.</li><li><strong>IP Address Forwarding</strong> – Uses routing tables to determine the optimal path for data packets.</li><li><strong>Gateway Between Networks</strong> – Connects local networks (LANs) to external networks (such as the internet).</li><li><strong>Network Address Translation (NAT)</strong> – Allows multiple devices on a private network to share a single public IP address.</li><li><strong>Firewall and Security</strong> – Many routers have built-in security features like firewalls and access controls to filter traffic.</li></ol>
NDP,"<div><strong>Definition:</strong><br>NDP (Neighbor Discovery Protocol) is the IPv6 equivalent of ARP, responsible for mapping IPv6 addresses on a local subnet to the corresponding MAC addresses. <br>It also facilitates other network functions, such as router discovery and network parameter configuration. (Replaces ICMP)<br></div><div><strong>Key Features:</strong></div><ul><li>Uses <strong>ICMPv6</strong> messages and <strong>multicast</strong> instead of broadcast (unlike ARP in IPv4).</li><li>Handles router discovery aswell (ARP does not) which helps configure IPv6 addresses dynamically without DHCP.<br></li><li>Uses Secure Neighbor Discovery (SEND), not as vulnerable to ARP spoofing.<br></li></ul><div><strong>How It Works:</strong></div><ul><li><strong>Router Solicitations (RS):</strong> Sent by hosts to request router information (directed to a solicited-node multicast address).</li><li><strong>Router Advertisements (RA):</strong> Sent by routers to all nodes, providing network information such as prefixes, default gateway, and other parameters.</li></ul><div><strong>ICMPv6 Packet Types in NDP:</strong></div><ol><li><strong>Router Solicitation (RS):</strong> Hosts request router information.</li><li><strong>Router Advertisement (RA):</strong> Routers provide network configuration details.</li><li><strong>Neighbor Solicitation (NS):</strong> Equivalent to ARP’s ""Who has?""—used to request the MAC address of a given IPv6 address.</li><li><strong>Neighbor Advertisement (NA):</strong> Equivalent to ARP's reply—responds with the requested MAC address.</li><li><strong>Redirect:</strong> Routers inform hosts of a more efficient next-hop for a given destination.</li></ol>"
What is the Application Layer? (Functions),"The application layer provides higher level services and protocols.<br>It serves as the interface between end-user applications and the underlying network services.<br><br>These protocols&nbsp;translate high-level actions from an application (written in any programming language) into actual network interactions.<br>This abstracts and encapsulates the networking process behind the scenes,&nbsp;allowing applications to interact with the network using a simple series of request messages (e.g., GET, PUT in HTTP, SEND, RETR in FTP)."
"Telnet (+ ssh, scp)","A simple, <b>unencrypted</b> terminal emulation protocol.<br>Rarely used on the internet today due to security risks.<br>Occasionally used on local networks for configuring legacy hardware.<br>Replaced by SSH (Secure Shell) for secure remote access.<br>SSH also provides secure file transfer through SCP (Secure Copy Protocol) and SFTP (SSH File Transfer Protocol)."
SMTP,"<div><u><b>SMTP (Simple Mail Transfer Protocol)</b></u><br>SMTP is a communication protocol used for sending (and sending alone) email messages between mail servers. It ensures reliable email transmission and is widely used across the internet.</div><h3><strong>How SMTP Works</strong></h3><div>SMTP typically operates over a <strong>TCP connection</strong> to a mail server, usually on <strong>port 25, 465 (SSL), or 587 (TLS)</strong>. The process follows a sequence of commands:</div><ol><li><strong>MAIL</strong> – Specifies the sender's email address.</li><li><strong>RCPT</strong> – Specifies the recipient's email address.</li><li><strong>DATA</strong> – Contains the body of the email, including headers and content.</li></ol><h3><strong>SMTP Authentication (SMTP AUTH)</strong></h3><div>SMTP Authentication is an extension of SMTP that requires users to verify their identity before sending emails. This helps prevent unauthorized access and significantly reduces spam by ensuring only legitimate users can send messages through the server.</div>"
IMAP,"IMAP (Internet Message Access Protocol)<div>IMAP is a protocol used for retrieving and managing emails from a mail server. <br>Unlike SMTP, which is used for sending emails, IMAP is designed for receiving and synchronizing emails across multiple devices.<br><br>IMAP allows users to access their emails stored on a remote server without downloading them permanently. <br>This enables real-time synchronization across different devices. <br>The protocol operates over port 143 (unencrypted) or 993 (SSL/TLS encrypted).<br><br>The server listens on port 143<br>The client keeps a TCP connection open to send requests or receive notifications</div>"
What is HTTP?,"Hypertext Transfer Protocol<br><br>Text-based protocol<br>Uses TCP to connect to a server IP (typically on port 80)<br>Sends a request, e.g., GET /something/page.html<br>Receives a response message with data, e.g., HTTP/1.1 200 OK"
Main HTTP Requests and Status Codes,"GET – Retrieve data from the server<br>HEAD – Retrieve metadata about a resource without downloading the actual content (which is usually the head of the content)<br>POST - Send data to the server, could create<br>PUT - Change a resource on the server<br>DELETE - Remove a resource<br><br>1xx = Information<br>2xx = Success<br>3xx = Redirection (e.g: 301 moved)<br>4xx = Client error (e.g: 403 forbidden, 404 not found)<br>5xx = Server error (e.g: 500 internal error)"
"HTTP2, HTTP3 and HTTPS","<strong>&nbsp;HTTP/2</strong><ul><li>Introduced in <strong>2015</strong> to improve speed and efficiency over HTTP/1.1</li><li>Uses <strong>multiplexing</strong> (multiple requests/responses in one connection). This reduces the overhead of having to open multiple TCP connections.</li><li>Uses <strong>binary format</strong> instead of plain text (faster parsing)</li><li>Supports <strong>header compression</strong> (HPACK) to reduce overhead</li><li>Allows <b>server push</b> (server sends resources <b>before requested</b>)</li></ul><strong>&nbsp;HTTP/3</strong><ul><li>Uses <strong>QUIC</strong>&nbsp;(which is UDP) instead of TCP (reduces latency)</li><li>Built for <strong>faster and more reliable</strong> connections (even on unstable networks)</li><li>Eliminates <strong>head-of-line blocking</strong> seen in TCP-based HTTP/2</li><li>Uses <strong>encryption by default</strong> (improves security)</li><li>Standardized in 2022 and increasing in use rapidly</li></ul><strong>&nbsp;HTTPS (HTTP Secure)</strong><ul><li><strong>Encrypts HTTP traffic</strong> using <strong>TLS (Transport Layer Security)</strong></li><li>Prevents <strong>eavesdropping, man-in-the-middle (MITM) attacks, and tampering</strong></li><li>Uses <strong>port 443</strong> (instead of HTTP’s port 80)</li><li>Required for <strong>secure login, payments, and API communication</strong></li></ul>"
QUIC,"<b>Quick UDP Internet Connections</b><br>Built to make the web faster<br>QUIC is widely used by Google (Chrome, YouTube, Gmail), Facebook, Cloudflare, and other major platforms.<br><br><div>Traditionally, the web has relied on TCP (Transmission Control Protocol), which:</div>Ensures reliable data delivery (no packet loss)<br>Requires multiple handshakes before data transfer begins<br>Suffers from <b>head-of-line blocking</b>, where a single lost packet holds up the entire connection<br><br><br><b>Key Features of QUIC</b><br>- In TCP, packet loss affects all streams in a connection because they are processed sequentially.<br>&nbsp; QUIC multiplexes multiple streams over a single connection.<b>&nbsp;If one stream has lost packets, others continue unaffected.</b><br>-&nbsp; Uses UDP,&nbsp;QUIC adds reliability features on top of UDP, such as error detection, retransmission, and congestion control.<br><b>-&nbsp; Encryption is built in</b><br>-&nbsp; QUIC uses connection IDs instead of IPs, allowing it to continue a session even if the network changes."
"RTP, RTCP and RTSP","<b>Real-Time Transport Protocol<br></b>A network protocol used for delivering real-time audio and video over IP networks.<br><b>Encapsulates multimedia data (audio, video) into packets.<br>Packets are sent over UDP</b>, reducing delays compared to TCP.<br>Uses RTCP (RTP Control Protocol) for monitoring transmission quality and synchronization.<br><b><br>Real-Time Control Protocol<br></b>Works alongside RTP to monitor network conditions and stream quality.<b><br></b>Periodically sends control packets between sender and receiver.<br>Receivers send reports about stream quality (packet loss, latency).<br>Helps with synchronization of multiple RTP streams (e.g., audio and video).<br>Can be used for bandwidth estimation to optimize streaming.<b><br><br>Real Time Streaming Protocol</b><br>A network control protocol used for controlling the streaming of multimedia content over the internet.<br>A client (e.g., media player) sends requests to a server to control media playback.<br>Uses commands like:<br>PLAY – Starts media playback<br>PAUSE – Temporarily halts playback<br>TEARDOWN – Ends the session<br><b>Media is streamed using RTP/RTCP</b> (Real-Time Transport Control Protocol)"
"File-Sharing Protocols (SMB, NFS, P2P)","<div>SMB and NFS allow files <b>within a LAN</b> to be accessed and manipulated as if they were part of the local file system.<br>Users can open, edit, and save files directly from a shared network drive without needing to download and re-upload them.<br><br><b>SMB (Server Message Block)</b></div>Developed by Microsoft for Windows file sharing.<br>Allows shared access to files, printers, and serial ports.<br>Uses client-server architecture.<br>Operates over TCP/IP (ports 139, 445).<br>Has a range of features for security ect.<br>Common in Windows and Samba (Linux) environments.<div><br><b>NFS (Network File System)</b></div>Developed by Sun Microsystems for Unix/Linux file sharing.<br>Allows remote access to file systems as if they were local.<br>Uses RPC (Remote Procedure Call) over TCP/UDP (port 2049).<br>More lightweight than SMB, less features.<br>Ideal for Linux/Unix-based systems in networked environments.<br><br><br><div><b>P2P (Peer-to-Peer)</b></div>Decentralized file-sharing model (e.g., BitTorrent).<br>No central server; peers share files directly.<br>Like a large distributed system over lots of PCs using the system.<br>A small chunk of the file is downloaded from each available computer which has it.<br>Efficient for large-scale distribution but may have security risks.<br>Used for content distribution, such as software updates and media sharing.<br>"
How the Application Layer runs protocols,"<div><strong>1. Application-Layer Protocols Are Implemented in Software</strong></div><ul><li>Protocols like <strong>HTTP, FTP, SMTP, etc.</strong> are <strong>implemented in the application itself</strong> (e.g., a web browser, email client).</li><li>Example: <strong>Chrome implements HTTP</strong> using the <code>net/http</code> library (written in C++ in Chromium).</li></ul><div><strong>2. Protocols Use System Calls to Communicate with the OS</strong></div><ul><li>The application <strong>does not interact with the hardware directly</strong>. Instead, it <strong>makes system calls</strong> to request services from the <strong>OS's networking stack</strong>.</li><li>Example: When Chrome sends an HTTP request:</li><li><i>send(socket, http_request, length, flags);</i></li><li>The <code>send()</code> system call <strong>passes the data</strong> to the <strong>OS’s transport layer (TCP/IP stack)</strong>.</li></ul><div><b>3.</b>&nbsp;<strong>The OS and Kernel Handle Hardware-Specific Implementation</strong></div><ul><li>The OS <strong>interprets</strong> system calls and <strong>routes</strong> them through its networking stack.</li><li>The OS kernel <strong>interacts with the Network Interface Card (NIC)</strong> to send data over the network.</li><li>Different OSes (Windows, Linux, macOS) may have <strong>slightly different networking implementations</strong>, but the <strong>application doesn’t need to worry about this</strong>—it just makes system calls.</li></ul>"
What do web browsers do,"Web browsers <b>process and execute</b> JavaScript, HTML and CSS code and display the output.<br><br><div>Use Built-in Protocol Implementations (e.g., HTTP, HTTPS, WebSockets)</div>Browsers have integrated support for protocols like HTTP/HTTPS to fetch and send data over the internet.<br>These protocols make system calls (e.g., send(), recv()) to communicate with the OS’s networking stack.<br><br>Web browsers isolate web pages and scripts to prevent unauthorized access to system resources like files, memory, and hardware.<br>Sandboxing protects against malicious websites, restricting their ability to:<br>- Access files on your computer<br>- Execute system commands<br>- Interact with other open tabs or websites unless explicitly allowed (e.g., via CORS).<br>"
MQTT,"<b>Message Queue Telemetry Transport</b><br>Lightweight messaging protocol developed by IBM in the 1990s<br>Designed for low-bandwidth, high-latency, and unreliable networks<b> (widely used in IoT).</b><br>More efficient than HTTP due to smaller packet sizes and lower overhead.<br><br><b>How it works</b><br><div>Publish/Subscribe Model:</div>Devices (clients) publish messages to a broker.<br>Other clients subscribe to topics to receive relevant messages.<div>Message Broker (Centralized Server):</div>Acts as an intermediary, temporarily storing and forwarding messages.<br>Supports QoS (Quality of Service) levels to ensure message delivery.<br><br><b>Features:<br>Minimum message size of 2 bytes<br>Uses TCP</b> - stable and reliable<br>Stateful - persistent TCP connection<br>Ideal for one to many and many to many (subscriber model)<br><b>Low power consumption</b>"
CoAp (Improvements + Proxy Functions),"<u><b>Constrained Application Protocol</b></u><br>Application-layer protocol designed for low-power IoT devices to efficiently share data.<br>More lightweight than MQTT with an optimized design for constrained networks.<br>Uses a client/server model, where clients send requests to a CoAP server.<br>Can include a CoAP proxy/cache to improve efficiency.<br><br><b><u>Improvements:</u><br>Uses UDP Instead of TCP:</b><br>Reduces latency and overhead.<br><br><div><b>Efficient Acknowledgment (ACK) System:</b></div><div>ACKs can include the response payload (faster communication).</div>If processing is slow, ACK can be sent immediately, and the response follows later.<br>Message ID Tracking → Ensures that responses match the correct request.<br><br><b>Observing:</b><br>The server can push values to the client whenever they change<br>No need for repeated polling (requests) (reduces power consumption).<br><br><b>Block transfers:</b>&nbsp;<br>Larger data can be sent in chunks and rebuilt at the client<br><br><br><b><u>CoAP proxy</u><br>Proxy Caching </b>→ A proxy device caches data, allowing IoT devices to sleep after sending data, reducing power usage.<br><b>Multicast Support</b> → A single CoAP message can control multiple IoT devices simultaneously.<br><b>Automatic Device Discovery</b> → New IoT objects and their resources can be discovered dynamically.<br>"
How Email Works?,"<b>Sending the Email</b><br>When the user clicks “Send,” the email client uses Simple Mail Transfer Protocol (SMTP) to send the email to the outgoing mail server (SMTP server).<br><br><b>Routing the Email</b><br>The outgoing mail server determines the recipient’s email domain (e.g., example@gmail.com → Gmail).<br>The SMTP server contacts the Domain Name System (DNS) to find the recipient's Mail Exchange (MX) server, which is the destination mail server for that domain.<br>The email is then forwarded to the recipient's mail server.<br><br><b>Storing the Email</b><br>The recipient's mail server stores the email in their mailbox.<br>The server waits for the recipient to check their inbox.<br><br><b>Retrieving the Email</b><br>The recipient uses an email client (or webmail) to access the email.<br>The client uses Post Office Protocol (POP3) or Internet Message Access Protocol (IMAP) to fetch emails: <br><b>POP3</b> downloads and often deletes emails from the server.<br><b>IMAP</b> syncs emails across multiple devices without deleting them from the server."
What are RFCs?,"RFC stands for <b>Request for Comments</b>.<br>RFCs are a series of documents published by the Internet Engineering Task Force (IETF) and other organizations to define standards, protocols, and procedures used in computer networking and the internet.<br><br><div>RFCs serve as official specifications and guidelines for:</div>- Networking protocols (e.g., TCP, IP, HTTP, DNS, BGP)<br>- Best practices for network management and security<br>- Internet standards and architectural principles<br>"
IP Packets + Header,"IP Packets are the fundamental layer transmitted on the network layer.<br>They encapsulated the header of the protocol being used (TCP, UDP which is added at the transport layer)<br>The <strong data-end=""1302"" data-start=""1289"">IP header</strong> itself <strong data-end=""1359"" data-start=""1310"">depends on whether you are using IPv4 or IPv6</strong>.<br><br>It contains the following:<br><img src=""paste-dcdde3d339c1a49c275fed08e69f4ed2ec707f01.jpg""><br>"
What limits the size of the payload at all layers?,"When data is sent at the application layer, it may be passed in chunks to the OS's network stack, which handles segmentation and transmission.<br>At each layer, a header is added, with the size depending on the protocol at that layer.<br>The <strong>fundamental limiting factor for payload size</strong> is the <strong>link-layer MTU</strong>, which determines how much data can fit in a single frame. <br>However, higher layers (such as IP and TCP) also impose constraints to optimize transmission and avoid fragmentation.<br>The <strong>link layer enforces these limits via framing</strong>, ensuring that data is transmitted in appropriately sized frames over the physical medium.<br>The network layer is responsible for ensuring that packets will not exceed the MTU at the link-layer.<br><br>IPv4 packets can be fragmented by routers along the network path if the packet size exceeds the MTU of a link.<br>In IPv6, only the sender can fragment packets, not routers.<br>This means IPv6 routers will drop packets that exceed the MTU instead of fragmenting them. (and respond with a packet too large message)<br>Instead, IPv6 uses: Path MTU Discovery (PMTUD): The sender determines the smallest MTU along the path and adjusts packet size accordingly."
"What does ""packet switched"" mean in networks (+Key Aspects)","<div>The internet is a packet-switched model<br>A packet-switched network is a type of data communication network where information is broken into smaller chunks called packets, which are transmitted independently and then reassembled at the destination.</div><div>Unlike circuit-switched networks (which establish a dedicated connection for the entire duration of communication), packet switching dynamically routes each packet separately based on the best available path at any given moment.<br><br><h3><strong>Key Aspects of Packet Switching:</strong></h3><ol><li><div><strong>Data Fragmentation:</strong> Large messages (like a webpage, video, or email) are broken into smaller packets, each containing part of the original data along with addressing information.</div></li><li><div><strong>Independent Routing:</strong> Each packet can take different paths through the network based on availability, congestion, and routing policies.</div></li><li><div><strong>Stateless Network:</strong> No dedicated connection is maintained throughout the communication. Each packet is handled individually.</div></li><li><div><strong>Error Handling &amp; Reliability:</strong> If a packet is lost or corrupted, the receiving system can request a retransmission, ensuring reliable communication.</div></li><li><div><strong>Efficient Bandwidth Usage:</strong> Since packets from different users can share network resources dynamically, packet switching allows for better bandwidth utilization compared to circuit switching.</div></li></ol></div>"
How Multicast Works,"Depends on the Internet Protocol! (But similar concepts)<br><br><br><div><strong>IPv4:</strong></div><ul><li>IPv4 multicast uses a <strong>dedicated range of IP addresses</strong> known as <strong>Class D addresses</strong>, which are between: 224.0.0.0 to 239.255.255.255=</li><li>These addresses <strong>do not</strong> represent individual devices; instead, they identify a <strong>multicast group</strong>.</li><li>Devices that want to receive multicast traffic must <strong>join the group</strong>.</li><li><strong>IGMP (Internet Group Management Protocol)</strong> is used to manage group membership. Devices use IGMP to join and leave multicast groups.<br></li></ul><div><strong>IPv6:</strong></div><ul><li>Devices can join / leave multicasting groups, which have their own IP address.</li><li>Routing to these IPs distributes the traffic to all devices in the group, which the router keeps track of</li><li><strong>MLD (Multicast Listener Discovery)</strong> is used in IPv6 to manage multicast group membership.<br>Allows for multicast addresses to have a scope (e.g., link-local, site-local, or global), meaning packets can be confined to specific areas of the network.<br>Also has other benefits and nice features.</li></ul>"
How Ports work In Networks?,"Ports in networking are logical endpoints used for communication between devices over a network. <br><b>They allow multiple services and applications to run simultaneously on a device by</b> <b>directing incoming and outgoing data to the correct processes.</b><br>Ports are identified by 16-bit numbers, ranging from 0 to 65535.<br><br><b>Well-Known Ports </b>(0-1023): Used by standard services (e.g., HTTP: 80, HTTPS: 443, SSH: 22).<br><b>Registered Ports</b> (1024-49151): Assigned for specific applications (e.g., Steam: 27015, MySQL: 3306).<br><b>Dynamic/Ephemeral Ports </b>(49152-65535): Temporary ports used for client-side connections.<br><br>When you visit a website (http://example.com), your browser connects to port 80 on the server (for HTTP).<br>Your device assigns <b>a random ephemeral port</b> (e.g., 50000) for this session.<br>The server responds to this port, ensuring only your request gets the correct response.<br><br><div><b>Firewalls control access to ports to prevent unauthorized communication</b>. For example:</div>Blocking port 22 (SSH) prevents remote login attempts.<br>Allowing port 443 (HTTPS) ensures secure web browsing.<br><br>Your device can only receive data on a specific port if it has explicitly opened that port for listening.<br>This port only remains open for the duration of that connection.<br>Once the session ends, the OS closes the port, making it useless for attackers.<br>Most devices use a firewall that only allows responses from trusted sources (i.e., the server you initially contacted, the exact destination IP and port you contacted.).&nbsp;<br>If using TCP, the three way handshake means you can only receive data from the server which the connection was formed with.<br>UDP doesn't require a handshake (it's connectionless), so an attacker could send packets to an open UDP port.<br>However, unless a program is actively waiting for UDP data, the packets are ignored.<br>"
What port and protocol is DNS?,Operates on port 53<br>Mostly UDP
DNS Record Types,<b>A (Address Record)</b><br>Maps a domain to an IPv4 address.<br>E.g:<br>example.com. IN A 192.0.2.1<br><br><b>AAAA (IPv6 Address Record)</b><br>Maps a domain to an IPv6 address.<br>E.g:<br>example.com. IN AAAA 2001:db8::1<br><br><b>MX (Mail Exchange Record)<br></b>Specifies the mail server responsible for receiving emails for a domain.<br>E.g:<br>example.com. IN MX 10 mail.example.com.<br><br><b>NS (Name Server Record)<br></b>Specifies the authoritative name servers for a domain.<br>E.g:<br>example.com. IN NS ns1.example.com.<br><br><b>And More!</b>
"DNS Terminology: Local, Authoritative, Resolver (Iterative, Recursive), Root Nameservers","<b>Local DNS Server</b><br>A local DNS server (often provided by an ISP or a corporate network) resolves domain names for users within a LAN (Local Area Network).<br>It caches previously resolved queries to improve speed and reduce external lookups.<br>If it does not have the requested domain in its cache, it queries higher-level DNS servers, starting from the recursive resolver (usually the ISP’s DNS server) and moving up the hierarchy.<br><br><b>Root Nameserver</b><br>There are 13 root name server systems, labeled A–M, operated by various organizations, including ICANN, Verisign, NASA, and others.<br>These servers do not resolve domain names directly but direct queries to the correct top-level domain (TLD) name servers (e.g., .com, .org, .uk).<br>In reality, each root server is replicated in multiple locations worldwide using Anycast routing, meaning thousands of physical root servers exist globally.<br><br><b>Authoritative Server</b><br>The final destination of a DNS query that holds the actual DNS records for a domain (e.g., A, AAAA, MX, CNAME).<br>It responds with the IP address (or other relevant DNS record) if it has the information.<br>Each domain has one or more authoritative name servers responsible for answering queries about it.<br><br><b>Resolver</b>&nbsp;<br>The DNS component responsible for resolving domain names into IP addresses for a client (e.g., your computer or phone).<br>There are two types:<br><b>1. Recursive Resolver (Most Common)</b><br>The resolver performs the entire lookup process on behalf of the client.<br>It queries other DNS servers (root, TLD, authoritative) as needed and caches results.<br>Most users rely on their ISP’s or a third-party recursive resolver (e.g., Google’s 8.8.8.8, Cloudflare’s 1.1.1.1).<br><b>2. Iterative Resolver</b><br>The resolver does not do all the work - instead, it returns referrals to the client, instructing it to query the next DNS server.<br>The client must make multiple queries, following the DNS hierarchy (root → TLD → authoritative).<br>Used less frequently in modern networks, where recursive resolvers are preferred for efficiency."
Public DNS Servers,"Usually DNS name server are configured to only answer external quries for their own internal domains.<br>E.g: ECS DNS servers should only answer external queries for hosts under ecs.soton.ac.uk<br>This is done for security and performance reasons to prevent DNS abuse (e.g: cache poisoning, amplification attacks)<br><br>There are some open public servers though<br>Google DNS<br>Cloudfare<br>These will respond to and try to resolve queries for any domain<br><br><br>These can be useful if your organisation does DNS filtering.<br>They can also have improved privacy and performance."
DNS Privacy Suggestions / Improvements,"<b>Traditional DNS <br></b>Not encrypted - queries are sent in plain text over UDP or TCP.&nbsp;<br>Your ISP (or any observer) can see and log every domain you query.<br>This means third parties (e.g., ISPs, attackers, governments) can intercept and monitor DNS queries, revealing which websites a user visits.<br><br><b>Encryption Solutions:</b><br>DNS over HTTPS (DoH): Encrypts DNS traffic via HTTPS, making queries indistinguishable from regular web traffic.&nbsp;<br>Encrypts your DNS queries inside HTTPS, hiding them from third parties<br>BUT the DoH resolver itself (e.g., Google DNS, Cloudflare, Quad9, etc.) still sees the full domain you are requesting.<br><br><b>Multicast DNS (mDNS)</b><br>Not every network needs full DNS infrastructure<br>Small networks can benefit from ""zero configuration"" approaches<br>mDNS (Multicast DNS) allows devices to discover each other without a centralized DNS server.<br>Instead of querying a dedicated server, devices broadcast their DNS queries via multicast packets (224.0.0.251 for IPv4, FF02::FB for IPv6).<br>Used in small, unmanaged networks like home networks, IoT setups, and office LANs.<br>E.g:&nbsp;Apple’s Bonjour (used for AirPrint, AirPlay)."
"Firewalls (Stateful, Application Layer)","<b>Firewalls </b><br><ul><li>Sit at the edge of a network.</li><li>Inspect each packet and compare it to a set of rules.</li><li>Packets that meet the rules → Passed</li><li>Packets that don’t meet the rules → Dropped or Rejected</li><li>Most routers and PCs have a firewall.</li></ul><br><br><b>Stateful vs. Stateless Firewalls<br></b>Stateless Firewalls (Less Secure)<br>Do not track connections.<br>Example: Allowing all web traffic (port 80 inbound) could let attackers exploit vulnerabilities.<br><br><b>Stateful Firewalls (More Secure)</b><br>Track active connections using TCP/IP header fields.<br>Rules for related &amp; established connections.<br><b>Example Rule:</b><br><ul><li>Allow outbound traffic to port 80</li><li>Block inbound traffic from port 80 unless it belongs to an existing connection</li></ul><b>Common security rule:</b> <br><ul><li>Deny all inbound unless related/established</li><li>Allow all outbound</li></ul><br><br><br><b>Application Layer Firewalls</b><br><li><strong>More advanced than traditional firewalls</strong></li><li>Operate at the <strong>application layer</strong> (Layer 7 of OSI)</li><li><strong>Inspect packet contents</strong> to verify they match their protocol.</li><li><b>Example:</b> Ensures <strong>packets on port 80</strong> actually contain <strong>HTTP data</strong>, preventing spoofing attacks.</li>"
Security Through Obscurity,"Security through obscurity refers to the idea of hiding or obscuring the functionality of a system to stop attackers exploting it.<br>This is not really security, at best it only slows attackers down.<br><br>Instead, it is a good principle to assume that<b> the enemy knows the system</b>."
Supply Chain Attacks,"An attack where hackers target vulnerabilities in an organization’s supply chain - compromising third-party vendors, software, or hardware providers to infiltrate the final target. <br>Instead of attacking a company directly, attackers breach suppliers or service providers that have privileged access to the target's systems."
Network Intrusion Detection,"Hackers can enter networks, or even legitimate users already on the network, in order to do malicious things<br><br>NIDS is a legitimate use of network sniffing:<br>- Monitors a network looking for malicious activity or policy violations<br>- May be signature based or use anomaly-based detection<br><br>NIDS can monitor and alert activity, and it may even be able to take action to prevent the intrusion."
"Physical Network Security (NAC, 802.1x, IPSEC)","Attackers can gain <strong>physical access</strong> to a network in various ways, such as: plugging into a corporate network and having access to everything<br><br><b>Network Access Control (NAC)</b><br>Devices plugged in to a network do not receive any data unless authroised.<br>A simple approach is to filter devices by MAC address, however MAC address spoofing is easy.<br><br><b>802.1x</b><br>Uses the extensible authentication protocol (EAP) to authenticate clients.<br>Blocks the switch / port until they authenticate.<br>A much more secure approach to NAC<br><br><b>IPSEC</b><br>NAC doesn't stop unauthrosied parties sniffing traffic if they tap a connection, for example fibre cables can be bent to receive signals.<br>IPSEC encrypts packets at the network layer and authenticates them (although it hasn't properly taken off)."
VPNs,"Virtual Private Networking<br>Simulates a direct connection between devices<br>Encrypts network traffic using protocols such as IPSEC, only the DNS to the VPN server can be seen.<br><br><b>Site-to-Site VPN:</b><br>Securely connects entire networks (e.g., a branch office to a head office).<br>Typically used by businesses to create private, secure connections between multiple locations.<br>Example: Connecting an office in London to a headquarters in New York.<br><br><b>Remote-access VPN:</b><br>Allows individual clients (e.g., employees working from home) to connect securely to a private network.<br>Traffic is encrypted between the client and the VPN server to ensure security.<br>Common in corporate environments for remote work.<br>Example: GlobalProtect<br><br><b>Commercial VPN</b>:<br>A type of remote-access VPN for individuals to browse the internet rather than to connect to a companies network.<br>Unlike corporate Remote-Access VPNs, which connect users to a private corporate network, commercial VPNs connect users to public VPN servers operated by the provider.<br>Their primary purpose is to hide the user's IP address from their ISP, however this is simply trusting a VPN company over an ISP."
"Wireless Security (Encryption, Open Hotspots,&nbsp; WEP, WPA / WPA2 / WPA3, WPA Personal / Entrerprise, WPS)","Wireless is inherently less secure than a wired connection, anyone within range can listen in or participate.<br><br>Most modern networks use some encryption to restrict access.<br><br>Open ""hotspots"" are public Wi-Fi networks that do not require authentication or encryption for users to connect, typically found in places like coffee-shops.<br>Public-wifi is usually unencrypted (although the data from the transport layer might be - e.g: HTTPS).<br><br><b>WEP (Wireless Equivalent Privacy)</b><br>The original method of encryption for wireless networks<br>Uses a 40 bit or 104 bit key<br>Proved to be easy to crack the key<br><br><b>WPA (Wi-Fi Protected Access)</b><br>Uses Temporal Key Integrity Protocol (TKIP)<br>An intermediate solution to the weakness of WEP<br>Now proven to also be weak<br><br><b>WPA2</b><br>More secure and complex than WPA<br>Uses AES as the encryption algorithm<br><br><b>WPA3</b><br>Same encyprtion strength as WPA2<br>Improves security of intial key-exchange<br><br><b>WPA-Personal:</b> uses pre-shared keys, such as a common password for networks.<br><b>WPA-Enterprise: </b>uses 802.1x authentiication, requiring a username and a password.<br><br><b>WPS</b><br>Intended to make it easier to connect to a WPA-protected network.<br>User enters a 7-digit pin or presses a button on the access point for initial connection.<br>However this is easily brute forced, and it is usually recommended to always disable WPS."
Importance of Software Updates (KRACK and KROOK),"Networks are slow to update<br>There are many known vulnerabilities in certain protocols or technologies<br>Many networks will still be vulnerable to these attacks if they have not been updated<br><br><b>KRACK - 2017</b><br>Key Reinstallation Attack.<br>A replay attack that resets a number used in authentication.<br>Allows an attacker to gradually work out the full keychain and decrypt traffic.<br>Effects old WPA2 devices.<br><br><b>KROOK - 2019</b><br>Vulnerability in some WiFi chipsets.<br>Allows decryption of WPA2 traffic.<br>Found in 1 billion affected devices, but can be fixed by a software update.<br><br><br>Attacks like KRACK and KROOK are very easy for anyone to use, and can still affect devices which have not been updated."
DNS (Privacy and Trust Concerns),"<b>DNS is not signed or encrypted.<br><br>DNS Amplification (DDOS):</b><br>DNS is a small request which gives a large response.<br>Therefore it can be explotied for DDOS attacks, by spamming requests we can overwhelm a server.<br><br><b>DNS Cache Poisoning:</b><br>Attackers can supply a fake response to a caching resolver.<br>They only need to know the queried server's IP address and guess (or snoop) a 16-bit transaction ID.<br>All users of the resolver now get the fake entry.<br>It is temporary, once the cache refreshes it will no longer effect users.<br><br><b>DNS Hijacking:<br></b>Attackers compromise a home or public router and change its DNS settings to point to a malicious DNS resolver.<br>It forcibly redirects a user’s requests to malicious or unintended websites.<b><br><br>DNS Privacy:</b><br>Your connection to a server may be encrypted.<br>But DNS is not encrypted.<br>Anyone sniffing the connection can see your DNS requests, therefore where you are going on the internet.<br>This allows people to build a profile of your usage patterns.<br>Example:<div>If you visit login.example.com, the entire request, including login.example.com is exposed.<br><br></div>"
"DNS Improvements (DNSEC, Mitigating DNS Amplification)","<b>DNSSEC (DNS Security Extensions)</b><br>Developed over 10 years ago, however it is still being deployed<br>Allows responses to be signed<br>BUT responses are larger<br><br><b>Mitigating DNS Amplification:<br></b>We can't block spoofed IP addresses, since this blocks the victim not the attacker.<br>We can block resolver lookups from non-local IP addresses (restrict lookups to only those from your organisation or customers).<br>Ignore certain request types (&lt;root&gt; and ANY)."
"DDOS (How it works, Examples, Mitigation)","(Distributed) Denial of Service<br>The goal of any DoS attack is to take a target system or network out of service to cause disruption.<br>This can be done by consuming: network bandwidth, CPU cycles ect.<br>It can also be used as a distraction for other cyber attacks.<br><br>There are effective forms of attack from a single source system<br>Usually<b> a distributed attack may be more effecive</b>:<br>- Use more systems to deprive the victim<br>- Harder to stop as there are multiple sources<br>The sources could be: IoT devices, botnets or volunteers.<br><br><b>Example Techniques:<br>IPv6 RA</b> Flood - Send a large number of IPv6 RA multicasts to consume the CPU on a victim's machine (Windows 10 however now stops joining new networks after 100).<br><b>LOIC</b> - Spams UDP/TCP<br><b>HOIC </b>- Uses HTTP Flood of POSTS (works with far fewer users than LOIC)<br><b>TCP SYN Flood</b> - Send a TCP SYN packet, server replies with SYN ACK, attacker never sends final ACK, so victim left waiting. Consumes state on server.<br><br><b>DDos Mitigation:</b><br>Anycast - Spreads the load across lots of networks / systems, so only one system goes down from the DDOS.<br>Responsive network team - Block attacks as they occur, redistribute services across different connections.<br>Good relationships with upstream providers - They may help to block attacking traffic.<br>"
Switches and Hubs,"<div> <strong>Switch:</strong></div>
<ul>
<li>Operates at the <strong>data link layer (Layer 2)</strong> of the OSI model.</li><li>Connects multiple devices on a LAN through ethernet</li>
<li>Uses <strong>MAC addresses</strong> to direct data only to the intended recipient.</li>
<li><strong>Reduces network congestion</strong> by avoiding unnecessary data transmission.</li>
<li>Supports <strong>full-duplex communication</strong>, allowing simultaneous sending and receiving of data.</li>
<li>Improves <strong>network security</strong> as data is not broadcasted to all devices.</li><li>Can sometimes also perform routing (smart switches blur the line between switches and routers)</li>
</ul>
<div><strong><br></strong></div><div><strong>Hub:</strong></div>
<ul>
<li>Operates at the <strong>physical layer (Layer 1)</strong> of the OSI model.</li>
<li><strong>Broadcasts data to all devices</strong> on the network, regardless of the recipient.</li>
<li>Creates <strong>higher network traffic and collisions</strong>, reducing efficiency.</li>
<li>Supports only <strong>half-duplex communication</strong>, meaning data can only be sent or received at a time.</li>
<li><strong>Less secure</strong> as data is exposed to all connected devices.</li></ul>"
