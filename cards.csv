The TCP / IP Model (vs the Tanenbaum Model and OSI model),"The&nbsp;Transmission Control Protocol / Internet Protocol model is the practical networking model used in real-world internet communications.<br><br>It contains 4 layers:<br><b>Application Layer</b> – Handles high-level protocols like HTTP, FTP, SMTP, and DNS. This is where applications interact with the network.<br><b>Transport Layer</b> – Manages end-to-end communication between devices using protocols like TCP (reliable, connection-oriented) and UDP (faster, connectionless).<br><b>Internet Layer</b> – Responsible for addressing, routing, and delivering packets using IP (Internet Protocol). It includes protocols like ICMP and ARP.<br><b>Network Access Layer&nbsp;&nbsp;</b>(also called Link Layer) – Deals with the physical transmission of data over network hardware, including Ethernet, Wi-Fi, and other data link/physical layer technologies.<br><br>The Tanenbaum model isn't widely recognized as a standard model but is instead Andrew Tanenbaum’s simplified version of the OSI model. <br>It is the modern updated version of the IP model.<br>It is similar to the IP model but it renames the internet layer as the network layer, and splits the link layer into a link and physical layer.<br>This is the model we study in this module.<br><br>The OSI model is also used for academics and teaching. It is the same as the Tanenbaum model but the application layer is split further into the application, presentation and session layer."
Examples of Components Handling Each Layer of the Tanenbaum Model,"Application -&nbsp;Software like Chrome, Outlook, Zoom, which interact with the network via protocols (HTTP, SMTP, RTP).<br><br>Transport - The operating system's TCP/UDP stack (Windows/Linux networking software).<br><br>Internet - The IP stack in the OS kernel (Windows TCP/IP stack, Linux networking stack).<br><br>Link - Network drivers and NICs (Ethernet, Wi-Fi adapters, firmware handling MAC addressing).<br><br>Physical - Network hardware, NICs and the physical medium. (Wi-Fi routers, fiber-optic cables, network interface cards - NICs)."
The Link Layer's Functions,"Handled by Network Interface Cards on devices<br>The Link Layer is responsible for framing, addressing, and transmitting data over physical media within a local network (LAN).<br>It encapsulates network layer packets into frames for transmission.<br>It handles MAC (Media Access Control) addresses, which are used to uniquely identify devices on the local network.<br>It can send data directly to another device on the same network (unicast) or to a router (when sending data to another network).<br>It also manages error detection, flow control, and access to the physical medium."
"Packets, Frames, Datagrams, Segments","<b>Datagram / Segment</b><br>A data unit at the transport layer<br>It is a datagram if using TCP<br>It is a segment if using UDP <i>(remember SMG spray)</i><b><br><br>Packet:</b><br>A unit of data that is transmitted across a network. <br>It consists of a header (containing metadata like source and destination addresses) and a payload (the actual data being sent).<br>Packets exist at multiple layers, but they are most commonly associated with the Network Layer (e.g., IP packets).<br><br><b>Frame:</b><br>A data unit at the Link Layer (Data Link Layer in the OSI model).<br>A frame encapsulates a packet from the Network Layer.<br>It contains three main parts:<br>Header – Contains MAC addresses and other control information.<br>Payload – The encapsulated data (which includes a packet from a higher layer).<br>Trailer – Contains error-checking information (e.g., CRC for detecting corruption).<br><br>"
Flow Control (What layers does it occur on?),"Regulating the speed at which data is sent.<br>Ensures a slow receiver is not overwhelmed by a fast sender.<br>Can be message-based (receiver sends control messages to pause/resume) or rate-based (pre-agreed speed).<br><br>This is most common on the transport layer (TCP).<br>It can occur on the link layer&nbsp;(Ethernet, Wi-Fi) aswell but this is less common."
The 3 General Link Layer Models,"<b>Connectionless, No Acknowledgements</b><br>Used in low error rate networks, such as wired Ethernet (IEEE 802.3).<br>No connection setup is required before data transmission - frames are simply sent without pre-establishing a communication path.<br>No acknowledgments (ACKs) are sent back by the receiver, meaning frame loss is not detected at the Link Layer.<br>If a frame is lost, it is not retransmitted at this layer; instead, higher layers (like TCP) handle reliability if needed.<br>Example: Standard Ethernet, where a frame may be dropped if a collision or congestion occurs, but there is no retransmission at the Link Layer.<br><br><b>Connectionless, Acknowledged<br></b>Used in medium-to-high error rate networks, such as Wi-Fi (IEEE 802.11).<br>No dedicated connection is established, but each frame sent expects an ACK (Acknowledgment) from the receiver to confirm successful delivery.<br>If no acknowledgment is received within a time window, the frame is retransmitted.<br>This method improves reliability compared to connectionless, unacknowledged networks but introduces higher overhead due to ACK packets.<br>Example: Wi-Fi networks, which use ACK frames for reliable delivery over a wireless medium that is more prone to interference and signal loss.<br><br><b>Connected, Acknowledged</b><br>Used in long-delay or unreliable networks, such as satellite links and certain cellular networks.<br>A connection-oriented approach where a communication session is established before data transfer begins (negotiates flow control and congestion control before sending data).<br>Frames are sent only after a connection is established and each frame is acknowledged to ensure delivery.<br>This model helps reduce transmission errors in environments with high latency and frequent packet loss, but it adds setup overhead."
Strategies for Handling ACKs on the Link Layer,"Different strategies exist for handling ACKs (Acknowledgments) and retransmissions at the Link Layer to ensure reliable data transfer.<br><br><b>1. Stop-and-Wait ARQ (Automatic Repeat reQuest)</b><br>The Simplest Method<br>The sender transmits one frame and waits for an ACK before sending the next frame.<br>If the ACK is received, the next frame is sent.<br>If no ACK is received (due to frame loss or corruption), the sender retransmits the same frame after a timeout.<br>Advantage: Simple to implement.<br>Disadvantage: Inefficient for long-distance or high-latency links because the sender must wait before sending more data.<br><br><br><b>Pipelining (Sliding Window Protocols)</b> <br>More Efficient<br>Pipelining improves efficiency by sending multiple frames before waiting for ACKs.&nbsp;<br>The following are types of pipelining:<br><b>Go-Back-N ARQ</b><br>The sender can send multiple frames (up to a set window size) before receiving the first ACK.<br>If an ACK is missed or an error occurs, all frames after the lost one are retransmitted.<br>Advantage: Easier to implement than Selective Repeat.<br>Disadvantage: Inefficient when errors occur, as multiple frames may be retransmitted unnecessarily.<br><b>Selective Repeat ARQ</b><br>Also uses pipelining, but only retransmits the specific lost/damaged frames, rather than the entire sequence.<br>The receiver must store out-of-order frames until the missing ones are retransmitted.<br>Advantage: More efficient than Go-Back-N since only the necessary frames are resent.<br>Disadvantage: Requires more complex buffering and sequence tracking."
Error Detection Methods on the Link Layer,"<div>The Link Layer can attempt to provide a ""virtually error-free"" connection to the Network Layer by detecting and, in some cases, correcting errors before forwarding data.</div>This involves error detection and packet loss detection, which can trigger retransmissions if needed.<br>However, higher layers (e.g., TCP at the Transport Layer) may also implement their own error-handling mechanisms.<br>No radio link (e.g., Wi-Fi, satellite, cellular) is 100% error-free, so error detection is crucial in wireless communication.<br><br><b>Detecting errors:</b><br><div>1. Parity Bit (Simplest Method)</div>A single bit is added to each frame to indicate even or odd parity.<br>Even Parity: The number of 1s in the frame, including the parity bit, is even.<br>Odd Parity: The number of 1s is odd.<br>Limitation: Can only detect single-bit errors; multiple-bit errors may go unnoticed.<br><br>2. Checksums (Basic Error Detection)<br>A checksum value (computed by summing the data in a specific way) is appended to the frame.<br>The receiver recalculates the checksum and compares it to the received checksum.<br>If they don’t match, an error is detected.<br>Limitation: Can miss certain types of errors (e.g., errors that cancel each other out).<br><br>3. Cyclic Redundancy Check (CRC) – Most Robust Detection Method<br>A mathematical function (polynomial division) generates a CRC value based on the frame's data.<br>The CRC value is appended to the frame.<br>The receiver performs the same calculation and compares the result.<br>Highly effective at detecting errors, even multiple-bit errors.<br>Used in Ethernet (IEEE 802.3), Wi-Fi (IEEE 802.11), and many other protocols.<br><br><br><br>If an error is detected we can use&nbsp;Automatic Repeat reQuest (ARQ) to retransmit the frame.&nbsp;<br>Could be Stop-And-Wait ARQ,&nbsp;Go-Back-N ARQ, Selective Repeat ARQ ect."
Framing (Definition + Example Method),"<div>Since the physical layer only transmits raw bits, the link layer must:</div>- Group bits into meaningful data units (frames).<br>- Ensure data is transmitted without errors.<br>- Mark the beginning and end of each transmission unit so the receiver knows where a message starts and ends.<br><br>The link layer does not fragment and reassemble network-layer packets across multiple frames. <br>Each frame at the link layer encapsulates one network-layer packet (or a fragment of one, if it was already fragmented at the network layer).<br>Each frame contains (header[source+dest MAC, network protocol indicator], payload, trailer [CRC]).<br><br>There are various appropaches, but one example is using a FLAG byte value to mark the start and end.<br>If the FLAG occurs in the actual data, we need an Escape byte.<br>If an Escape byte occurs in the data, Escape that.<br>"
MAC Protocol (+Address Format),"The Media Access (MAC) Protocol manages access to/from the physical (PHYS) medium<br><b>It is part of the link layer</b><br><br>It has a mechanism for sending frames to/from PHYS and typically manages channels/frequencies/collisions<br>Typically it is very specific to a type of PHYS layer and may need extra bits added to the frame<br>Throughout a network there may be many different PHYS mediums with different MAC protocols<br><br>MAC addresses are currently defined to be 48 bits, but extensible to 64.&nbsp;<br>A device can have multiple MAC addresses for each form of physical connection (e.g: 1 for ethernet and 1 for WiFi)<br>They need to be unique (24 bits to vendor allocation, last 24 bits assigned by vendor)<br>Written in blocks of hexidecimal<br>E.g:<br>F0:1F:AF:12:34:56<br>We have 6 bytes here (one hex digit = 4 bits)<br>Here, F0:1F:AF is the OUI assigned to Intel, and 12:34:56 is the unique NIC identifier."
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
